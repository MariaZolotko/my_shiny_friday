# This is a sample Python script.

# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.

import pandas as pd
import requests
from bs4 import BeautifulSoup
import telebot
from telebot import types
import re
from random import randint
import config
import dbworker
import math



apikey='8803784b-fa83-4b12-8060-37049f25ef5d'
apikey1='0949a9ad-718d-4f48-ba42-a5d8845724cc'

bot=telebot.TeleBot(config.token)



@bot.message_handler(commands=["info"])
def cmd_info(message):
    dbworker.del_state(message.chat.id)
    bot.send_message(message.chat.id, "*–Ø - –ü—è—Ç–Ω–∏—Ü–∞!* üéâ\n"
                                      "–ì–æ—Ç–æ–≤–∞ –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Ç–µ–±—è —Ö–æ—Ä–æ—à–∏–π –±–∞—Ä—á–∏–∫ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ –∏ –ø—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç.\n"
                                      "–í–æ-–ø–µ—Ä–≤—ã—Ö, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π —Å–≤–æ–∏–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –±–µ–∑ —ç—Ç–æ–≥–æ –Ω–∏–∫–∞–∫.\n"
                                      "–ó–∞—Ç–µ–º –∑–∞–¥–∞—Ç—å —Ä–∞–º–∫–∏ –ø–æ–∏—Å–∫–∞ –±–∞—Ä–∞ –≤ –∫–º.\n"
                                      "–Ø –ø–æ–¥–±–µ—Ä—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–Ω—ã—Ö –±–∞—Ä–∞ —Ä—è–¥–æ–º.", parse_mode='Markdown')
    bot.send_message(message.chat.id, "–¢—ã –≤—ã–±–µ—Ä–∏—à—å –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö.\n"
                                      "–ê —è –ø—Ä–æ–≤–æ–∂—É —Ç–µ–±—è –¥–æ –Ω–µ–≥–æ.\n"
                                      "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º /start.\n"
                                      "–ö–æ–º–∞–Ω–¥–∞ /reset –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")


@bot.message_handler(commands=["start"])
def cmd_start(message):
    dbworker.set_state(message.chat.id,config.States.S_START.value)
    hide_keyboard = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø - —Ä–æ–±–æ–ø—è—Ç–Ω–∏—Ü–∞ üç∑ \n"
                                      "–î–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–∏—Ç–µ–π–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –Ω—É–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π –≥–µ–æ–¥–∞–Ω–Ω—ã–º–∏: /geo.\n"
                                      "–í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞–π–¥–µ—à—å –≤ /commands.\n"
                                      "–°–∫–∏–Ω—É—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ /reset.", reply_markup=hide_keyboard)


@bot.message_handler(commands=["commands"])
def cmd_commands(message):
    bot.send_message(message.chat.id,
                     "/reset - —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è.\n"
                     "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥.\n"
                     "/info - –æ–ø–∏—Å–∞–Ω–∏–µ –ü—è—Ç–Ω–∏—Ü—ã.\n"
                     "/commands - –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.\n"
                     "/geo - –æ—Ç–¥–∞—Ç—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–∞—Ä—á–∏–∫–∞ —Ä—è–¥–æ–º.\n"
                     "/bounds - –æ–±–æ–∑–Ω–∞—á–∏—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞ –±–∞—Ä—á–∏–∫–∞ –≤ –∫–º.\n")


@bot.message_handler(commands=["geo"])
def geo(message):
    dbworker.set_state(message.chat.id, config.States.S_ENTER_GEO.value)
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True,one_time_keyboard=True)
    button_geo = types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≥–µ–æ–¥–∞–Ω–Ω—ã–º–∏", request_location=True)
    keyboard.add(button_geo)

    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–¥–∞–π –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=keyboard)


@bot.message_handler(func=lambda message: (dbworker.get_current_state(message.chat.id) == config.States.S_ENTER_GEO.value)
                                          and message.location is None and message.text.strip().lower() not in
                                          ('/reset', '/info', '/start', '/commands',
                                          '/geo','/bounds'))
def not_geo(message):
    bot.send_message(message.chat.id, "–¢—ã –Ω–µ –ø–æ–¥–µ–ª–∏–ª—Å—è –≥–µ–æ–¥–∞–Ω–Ω—ã–º–∏, —Ç–∞–∫ —è –Ω–µ —Å–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ä—è–¥–æ–º –±–∞—Ä. \n"
                                           "–¢–µ–±–µ –Ω—É–∂–µ–Ω –±–∞—Ä –≤ –ø—è—Ç–Ω–∏—Ü—É –∏–ª–∏ –Ω–µ—Ç...\n"
                                           "–î–∞–≤–∞–π –∂–º–∏, –±—É–¥—É –ø—Ä–∏—á–∏–Ω—è—Ç—å —Ç–µ–±–µ –¥–æ–±—Ä–æ :) /geo\n")

@bot.message_handler(content_types=["location"])
def location(message):
    global longitude
    global latitude
  #  print(message.location is not None)
  #  print((dbworker.get_current_state(message.chat.id) == config.States.S_ENTER_GEO.value) is True)
    if (dbworker.get_current_state(message.chat.id) == config.States.S_ENTER_GEO.value) and (message.location is not None):
        longitude = message.location.longitude
        latitude = message.location.latitude
        coord = str(message.location.longitude) + ',' + str(message.location.latitude)
        r = requests.get(
            'https://geocode-maps.yandex.ru/1.x/?apikey=' + config.apikey + '&format=json&geocode=' + coord)
        if len(r.json()['response']['GeoObjectCollection']['featureMember']) > 0:
            address = \
            r.json()['response']['GeoObjectCollection']['featureMember'][0]['GeoObject']['metaDataProperty']['GeocoderMetaData']['text']
            bot.send_message(message.chat.id, f"*–Ø –Ω–∞—à–ª–∞ —Ç–µ–±—è:*\n{address}\n", parse_mode='Markdown')
            bot.send_message(message.chat.id, f"–¢–µ–ø–µ—Ä—å –∑–∞–π–º–µ–º—Å—è –±–∞—Ä—á–∏–∫–∞–º–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ /bounds.\n")
            dbworker.set_state(message.chat.id, config.States.S_RECEIVE_GEO.value)
        else:
            bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–≤–æ–π –∞–¥—Ä–µ—Å')
    else:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã')

@bot.message_handler(commands=["bounds"])
def bounds(message):
    if dbworker.get_current_state(message.chat.id) == config.States.S_RECEIVE_GEO.value:
        dbworker.set_state(message.chat.id, config.States.S_ENTER_BOUNDS.value)
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏ –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞ –±–∞—Ä–æ–≤ –≤ –∫–º.\n")
    else:
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –≥–µ–æ–¥–∞–Ω–Ω—ã–º–∏ /geo \n"
                                          "–∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –≤–≤–æ–¥–∏—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞.\n")


@bot.message_handler(func=lambda message: (dbworker.get_current_state(message.chat.id) == config.States.S_ENTER_BOUNDS.value)
                                          and message.text.strip().lower() not in
                                          ('/reset', '/info', '/start', '/commands',
                                          '/geo','/bounds'))
def frame(message):
    if message.text.isdigit():
        full_list = []
        longitude_km=(1/(math.cos(longitude) * 111.3))*int(message.text)#–¥–æ–±–∞–≤–ª—è—é —Å—é–¥–∞ –∏–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –∞ –Ω–µ –ø–æ–ª–µ!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        latitude_km=(1/111)*int(message.text)
        coord = str(longitude) + ',' + str(latitude)
        spn = str(longitude_km) + ',' + str(latitude_km)
        r = requests.get(
        'https://search-maps.yandex.ru/v1/?apikey=' + config.apikey1 + '&format=json&text=–±–∞—Ä&lang=ru_RU&ll=' + coord + '&spn='+spn+'&rspn=1&results=10')
        if len(r.json()['type']) > 0:
            g = r.json()['features']
            for i, k in enumerate(g):
              l = [i+1,k['properties']['name'], k['properties']['description'],k['geometry']['coordinates']]
              full_list.append(l)
            df = pd.DataFrame(full_list)
            df.rename({1: 'name', 2: 'description', 3: 'coordinates'}, axis=1, inplace=True)
            df[['longitude', 'latitude']] = pd.DataFrame(df.coordinates.tolist(), index=df.index)
            df['href'] = 'https://yandex.ru/maps/?pt=' + df.longitude.map(str) + ',' + df.latitude.map(str)
            bot.send_message(message.chat.id, '–ë–∞—Ä—ã —Ä—è–¥–æ–º:\n')
            for i,n in enumerate(full_list):
                d=df.href[i]
                bot.send_message(message.chat.id, f'*{n[1]}* [{n[2]}]({d})', parse_mode='Markdown')
        else:
          bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –±–∞—Ä—ã —Ä—è–¥–æ–º.\n")
          bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É—è –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é API —è–Ω–¥–µ–∫—Å–∞, —è –Ω–µ –º–æ–≥—É —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≥–µ–æ–¥–∞–Ω–Ω—ã–µ.\n")
          bot.send_message(message.chat.id, "–ü–æ—ç—Ç–æ–º—É –º—ã –º–æ–∂–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–Ω–∞—á–∞–ª–∞ üòÇ /reset.\n")
        dbworker.del_state(message.chat.id)
    else:
        bot.send_message(message.chat.id, "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞ –≤ –∫–º.\n")
        bot.send_message(message.chat.id, "–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.\n")
        bot.send_message(message.chat.id, "–Ø –Ω–µ —Å–º–æ–≥–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ –∏–∑-–∑–∞ —É—Å–ª–æ–≤–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ API –Ø–Ω–¥–µ–∫—Å–∞.\n")
        bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑? /geo.\n")


@bot.message_handler(commands=["reset"])
def cmd_reset(message):
    dbworker.del_state(message.chat.id)
    bot.send_message(message.chat.id,
                     "–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑!\n"
                     "–ü–æ–¥–µ–ª–∏—Å—å —Å–æ –º–Ω–æ–π —Å–≤–æ–∏–º–∏ –≥–µ–æ–¥–∞–Ω–Ω—ã–º–∏ –∏ –≤–≤–µ–¥–∏ –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞ –±–∞—Ä–∞.\n"
                     "–Ø –ø–æ–¥–±–µ—Ä—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–Ω—ã—Ö –±–∞—Ä–∞ —Ä—è–¥–æ–º.")
    bot.send_message(message.chat.id, "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º /start.\n"
                                      "–ö–æ–º–∞–Ω–¥–∞ /reset –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")

def print_hi(name):
    # Use a breakpoint in the code line below to debug your script.
    print(f'Hi, {name}')  # Press Ctrl+F8 to toggle the breakpoint.


def cmd_sample_message(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è - –ü—è—Ç–Ω–∏—Ü–∞!\n"
                                      "–Ø –º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –≤–∏–Ω–æ –Ω–∞ –≤–µ—á–µ—Ä –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–π—Ç–∏ –∫–ª–∞—Å—Å–Ω—ã–π –±–∞—Ä—á–∏–∫ —Ä—è–¥–æ–º\n"
                                      "–ù–∞–∂–∏–º–∞–π /start –∏ –Ω–∞—á–Ω–µ–º \n"
                                      "–ñ–º—è–∫–∞–π /info –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –≤—Å–µ—Ö –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ–π—Å—Ç–µ–π.\n"
                                      "–í /commands –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.")

# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    bot.infinity_polling()

# See PyCharm help at https://www.jetbrains.com/help/pycharm/
